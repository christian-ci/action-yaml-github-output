name: Test YAML to GitHub Output Action

on:
  pull_request:
    branches: [master]
    types: [opened, edited, reopened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Run YAML to Github Output Action without region filter
      id: yaml-output-global
      uses: ./
      with:
        file_path: "./.github/settings-simple-nested.yml"

    - name: Check global outputs and environment variables
      run: |
        # Check the global environment variables
        if [[ "${{ env.APP_NAME }}" != "demo-app" ]]; then
          echo "Validation failed. Global 'app-name' environment variable is not as expected."
          exit 1
        fi
        if [[ "${{ env.ARCHITECTURE }}" != "arm64" ]]; then
          echo "Validation failed. 'architecture' environment variable is not as expected."
          exit 1
        fi

        # Check the global outputs
        if [[ "${{ steps.yaml-output-global.outputs.app-name }}" != "demo-app" ]]; then
          echo "Validation failed. Global 'app-name' output is not as expected."
          exit 1
        fi
        if [[ "${{ steps.yaml-output-global.outputs.architecture }}" != "arm64" ]]; then
          echo "Validation failed. 'architecture' output is not as expected."
          exit 1
        fi

    - name: Run YAML to Github Output Action with region filter
      id: yaml-output-region
      uses: ./
      with:
        file_path: "./.github/settings-simple-nested.yml"
        main_key: regions
        sub_key: us-west-1

    - name: Check regional outputs and environment variables
      run: |
        # Check the nested region environment variables
        if [[ "${{ env.CLUSTER_NAME }}" != "us-cluster" ]]; then
          echo "Validation failed. 'cluster-name' environment variable for us-west-1 is not as expected."
          exit 1
        fi
        if [[ "${{ env.APP_NAME }}" != "us-demo-app" ]]; then
          echo "Validation failed. 'app-name' environment variable for us-west-1 is not as expected."
          exit 1
        fi

        # Check the nested region outputs
        if [[ "${{ steps.yaml-output-region.outputs.cluster-name }}" != "us-cluster" ]]; then
          echo "Validation failed. 'cluster-name' output for us-west-1 is not as expected."
          exit 1
        fi
        if [[ "${{ steps.yaml-output-region.outputs.app-name }}" != "us-demo-app" ]]; then
          echo "Validation failed. 'app-name' output for us-west-1 is not as expected."
          exit 1
        fi

    - name: Run YAML to Github Output Action with CRUD format and primary key-value
      id: yaml-output-crud-primary
      uses: ./
      with:
        file_path: "./.github/settings-crud.yml"
        format_type: "crud"
        primary_key: "app-name"
        primary_value: "us-demo-app"

    - name: Check CRUD primary outputs and environment variables
      run: |
        # Check the CRUD format environment variables for primary key-value
        if [[ "${{ env.REGION }}" != "us-west-1" ]]; then
          echo "Validation failed. 'region' environment variable is not as expected."
          exit 1
        fi
        if [[ "${{ env.ACCEPTANCE_CLUSTER_NAME }}" != "us-cluster" ]]; then
          echo "Validation failed. 'acceptance-cluster-name' environment variable is not as expected."
          exit 1
        fi
        if [[ "${{ env.PRE_PROD_CLUSTER_NAME }}" != "us-pre-cluster" ]]; then
          echo "Validation failed. 'pre-prod-cluster-name' environment variable is not as expected."
          exit 1
        fi
        if [[ "${{ env.PROD_CLUSTER_NAME }}" != "us-prod-cluster" ]]; then
          echo "Validation failed. 'prod-cluster-name' environment variable is not as expected."
          exit 1
        fi

        # Check the CRUD format outputs for primary key-value
        if [[ "${{ steps.yaml-output-crud-primary.outputs.region }}" != "us-west-1" ]]; then
          echo "Validation failed. 'region' output is not as expected."
          exit 1
        fi
        if [[ "${{ steps.yaml-output-crud-primary.outputs.acceptance-cluster-name }}" != "us-cluster" ]]; then
          echo "Validation failed. 'acceptance-cluster-name' output is not as expected."
          exit 1
        fi
        if [[ "${{ steps.yaml-output-crud-primary.outputs.pre-prod-cluster-name }}" != "us-pre-cluster" ]]; then
          echo "Validation failed. 'pre-prod-cluster-name' output is not as expected."
          exit 1
        fi
        if [[ "${{ steps.yaml-output-crud-primary.outputs.prod-cluster-name }}" != "us-prod-cluster" ]]; then
          echo "Validation failed. 'prod-cluster-name' output is not as expected."
          exit 1
        fi

    - name: Run YAML to Github Output Action with CRUD format and top-level key 'build'
      id: yaml-output-crud-build
      uses: ./
      with:
        file_path: "./.github/settings-crud-top-level-test.yml"
        format_type: "crud"
        primary_key: "app-name"
        primary_value: "us-demo-app"
        top_level_keys: "build"
    
    - name: Check CRUD outputs and environment variables for top-level key 'build'
      run: |
        if [[ "${{ env.DOCKERFILE }}" != "Dockerfile" ]]; then
          echo "Validation failed. 'dockerfile' environment variable is not as expected."
          exit 1
        fi

    - name: Run YAML to Github Output Action with CRUD format and top-level key 'deployment'
      id: yaml-output-crud-deployment
      uses: ./
      with:
        file_path: "./.github/settings-crud-top-level-test.yml"
        format_type: "crud"
        primary_key: "app-name"
        primary_value: "us-demo-app"
        top_level_keys: "deployment"

    - name: Check CRUD outputs and environment variables for top-level key 'deployment'
      run: |
        if [[ "${{ env.PRE_PROD_CLUSTER_NAME }}" != "us-pre-cluster" ]] || [[ "${{ env.PROD_CLUSTER_NAME }}" != "us-prod-cluster" ]]; then
          echo "Validation failed. Cluster names are not as expected."
          exit 1
        fi

    - name: Run YAML to Github Output Action with CRUD format and top-level keys 'build,deployment'
      id: yaml-output-crud-both
      uses: ./
      with:
        file_path: "./.github/settings-crud-top-level-test.yml"
        format_type: "crud"
        primary_key: "app-name"
        primary_value: "us-demo-app"
        top_level_keys: "build,deployment"
        
    - name: Check CRUD outputs and environment variables for top-level keys 'build,deployment'
      run: |
        if [[ "${{ env.DOCKERFILE }}" != "Dockerfile" ]] || [[ "${{ env.PRE_PROD_CLUSTER_NAME }}" != "us-pre-cluster" ]] || [[ "${{ env.PROD_CLUSTER_NAME }}" != "us-prod-cluster" ]]; then
          echo "Validation failed. Either dockerfile or cluster names are not as expected."
          exit 1
        fi